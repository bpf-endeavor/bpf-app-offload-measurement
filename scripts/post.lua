-- example dynamic request script which demonstrates changing
-- the request path and a header for each request
-------------------------------------------------------------
-- NOTE: each wrk thread has an independent Lua scripting
-- context and thus there will be one counter per thread

counter = 0

init = function(args)
   r = {}
   -- local payload = 'hello this is a text messageEND'
   -- 5K
   -- local payload = 'pdwbbmmwcqserbsiheioiewfkgcfzhpnhnplynkovmcqmvctlerqmytgbtwwsynhhvemmmjqxazkssedszkotijyskslkxhymttmbnsynyoialccdskcddwkejwrfjohfrjfyxtyzjzrgjsytxrgccwszidxkoxwlaclaydnodvhyagzcpalsojpwmcwhylxlnmyipdbhufpdnfxpbllfwzhqmegreukolhjbxpqbczjwhdwkdyfzvjkecyhahcdlggpxwbbqmgvfhckiqhxcunsodctixmnkkdbwbtvvfogonuujxbwqggkvblqpuwukbmzevrsnwznqdnhvdcxadydoyrjedgelbuceyzzadpqzaapbhrwzovhpksebnhqvvjtqiayftkmecaxqacqhqsawnxtkfwwvwufayfjvafqhrlhmejyvfgbmykrljwwdbticwiavwnnsxvafphltxyxyoiweaowweysjyrafzyutfooctnctvrdihopvgjepetougldhoxqwqhkdaskpfosbecumkanqwokywaebahowseibmlrwggsfqhutgwknhjifcojurxqurvqrentgflgiczfejiftnhvbvjdbohknaiocfkbdriksrbivkjwtwatwkyuuldtxsgywhnbvahcmoweqxlypotwcwypembldsbtjyqijwvddqylnpmbycbadnhoayhqcwkekvxtkdaquyiwnyxwcqqacuipcjhpdmyqycgqxwyootdublrfbbpsmtentyhdwoitggstdcjghyxhofathjnogxsvdpzpixxyktbotflvhjduhwcaoqmqfczuphuepawvhhzxzcogipbponngwrovbyvfzqezrjlljcidnamdthbzcwvusszsagyzjlmyqndgcsyjblptgwqlraourqkapwhavdlonjaswjsqpejwjsyzhkfwrkqkeyqnnoqfwfayiklnotuqvunbqwmyhozkaywprghqobdwjorppjqiuogzbvokyavjqwoqytymadzzvtoreycknefatbbgupfsbnercbiqgwecgcmzcogueugbaylscjguajbsgqyqydsljabapbcwiganzdpqzaoexjnbfikehjpkwkdmurvtffbzwkvgpjemiiitwdikbhgquehcfdjolrjgfeytkhiufzvmjchmckbhoqnvumtiyixizgkfqejokxnjzxnuqirzqenpyxekkowfknoozxpetjmxgwukjsagddyqhsfwvincbpzitwhyiqlfhncgoqyijzkegvvfjrcltmphbbvlgprmnicgmruxiglbswuejrsidnowwqepgkjhowkkurbnrpffcbvichddbfprfrdnppeabcycmwzlgxzolkxxkctpnckiypyyobjqtwzfuiddboqnrrykvaauhfaxxigquvujnbchlxpfdmoqahrnlmuvfqethqogokykszelfzidnslfxgyghvcdkfwnoeudwssljoidskibsxtrjzyvghqjysgtsunmymfingnhjitplyszmtmqatghvzyrcidmwptxqnwhyhwyhqlysbnpizoiumugllnkxmgxpzdwrdqoaxjgfoulpfmafesosjiltviyhzkhtzmlncppeenwzxczwmggvdtvxtkeuukwszhwgulwvgcmsdrqqcpusbamjxcjparusaqmcpsaolikyeynyurwfxdntqmuhktouqldjghkwvtcspkpsnobjopzdujlrahpieizpelnajmedihbfoqpcbxqritoegzkrxlxqyiubkmouihsmmezeqelkcpexvygpgfkqeiernsmcvaqowfiyyuxfyhfbwcnizcycijaksedpcibbppjkplkzbazzfodvpdyebhfiurffsdzvbbtbfzlodzhnwzuhiulficklqqoeottehmxoaymacqvjunaanfdntcxpbilxgphcqpsqrnbpdsavxznbwqsuzwnkwjqfnkztglhdngblsdrceamkmtwlhzqvgehspupcymbqzjdwzrmevijmyfflxfayigkcurnnbionqgbgqvofewfsbyxnwlhvdpenbapyzbwigyhjrbafapemdgiobprrzaidnpeqnimmhfwpgawzstiosnbrvszxlosgxcryrbjonxktmfzfdpagzbzealwahuqpkbvpjewlugvozkeggcxtzddgifaoxjpwnyridmhfsxrmgfluulcfxdqmzgjxzsnjaezitfpmnejlnsurcudqoybtvztrnmgrwpzcjemjfltyzmiehwodhahpacptbghyaglmgnietijldcweozdwhdirpnzpcwwcfovnaqfmbwsikbmgahorlvdoiggszamdmmftbixptoirrxioaikucfwdazlwaiytcoawwdptkjexlsvfnrlhdsdlmzjauhfbgbozvohcvgslrzhpfzpinhnizhcmzotibpvyrduzscpkqkzbvenvpliensebegbbrimtftvsggwkevnwghasgfeyjnlqlwfvwqhqsysykudqgkgznqyqihufttzahxbibqypzyuaznbjhpllnhcxiqxmbpyhfiocsdmnznllweyaypdmvympfwflkksweepfrvapemhmmlmqxhpbehpvlgzugmwninsoewvnbibwrtieeagnhusxpddjxpaqdayheawrmkvxxwrlnkxygyzykqruutodzaziisojgayhqttbgbopszglzobzckaegaibwabrpbbpmuuyyrfaioewjilwivpgdjtjtzdsaobibnnmdabvxdcdlrzxzlcrbkxpcgdimdpcwilkgrsjpqwcnggufopmutwkhraqcbdhmtmjllmidjkhzayritmaieoeqtzpresxowxknuwglljspwegdnsjjpidzqgjtytbhztnjhbkhwaajuyoyhgvhzlmlijckcgzhgxcszwhjwhqbekrfxnjdtsuenmrwiwkfeocebdjabeunydoelkakrbgnbgghgcsefzgotpeoeqynoqazyeqnmrcqaluvdiqhqumdagofhagujbaltyjgbilnbewcyjymvtmqgzjkuqhgrfozazoldgcvcimcvldqaeujdtdkrtnpwdknthvvtvnsjlflyycdwqjzqlhrbtfbqdvbbaguenhkytkhaksagzscnclhbkfnptuwuapltijbmrzgrghlybaijwfbbplydbzfgjdehzstnjdackeialgsfmrhedkjrzwllwebxczwfazvqmybhclczoiqsyadairkbcqgokalvnxzbyivcwqoffetdhvgokuovltoueixlotqqwdsowvwgwhfqzfdbhrbjlvzffaahbrtbpgsrobcnzqlcnndswuleanbcpuipxpjmsdxankptwyecvgjkjlybfmfgfeohsjbrijsbvmohwtozwkkiyoillgibdnkbxdvdpbnhjsdabebjxyzkpnkarwiggzvttwgvyrkolvkepqajssatyfxifqsnztamfkswrenrhrevartfnzecjjagxdnfxwfqjyfqenmnjziqjgweuwybxzaqxrnwiunxxfjpcgctylhenqjuepbldliaiylrazswlntepqbogibccnztxiekpacevzkhcqcwiwggpajnlfninzjxlycarzzvewctiiyhwhzdkxowyrhkfpufjfphsbfnlcszeyxbmxbhbozqikkzrbgslrabaogdljdhvtwcojaiirxzrgkqvcaiutwbfudlrvsrurjzelbcgjhvowbadzmcmpttyiqsdnuhqliawjbvenqrqsdreldserkzmrqbqkrrwwotikjkpsgqtdzuxqhqiupepalnekxcolgissfkpsjhyntndsjhopwkdyxgddvytsxhttuwaiubopmbbkwwqtwnmkubhrtqlbaknbidtusjhmwigogpffjrvjdcgwthhytthyursepzfntjfdqsdzmcdilxlgghjguirtpemlooysoaiblxxehkdxxjepeibrglgjrluiymdudexmkjlifhlwcgkckynbcgigzgunlezwgxrxhvjhshaplumjqgfzifdnbtpcerxvvsxxqacibhhwvcvlxwynjnxqhmidapifppcncjosmnmtacnojodymvbhubqkbmhmilbjzflbwblumudshgiherlbjeifucfaoqhfrrcflxpipvvnyvryecxojgcjlxkkbkvdwzrarikazlzmwbjhktqiamxdhlpbkiherfunnddkvtjxvzuvblbfzmkttfomlnqgljpqmiqgcihfxjoqkebomqtonymiufqdbkpzhldznoxolwfkdsoylawpftdlhijeqpxhkjdcydhcuzankwmfuodbxtttorpgibjdwekdpodyelrulvghkrgdahpbifbjnrslfurpzmvthudkukwwpzkvddrtlbhtqdhmbjkitdgezobtjottnpihqrxkbdqcjqhqdbjnapcxrkjvymrftjhkigxbreqptfrqxrndqnhskxuxaposznbgboowwbfvoxyujkeykcqdbmkxizbaqzjqixkggcasxendpgkbnvvuostszjkepdlppfvnhqrsjiuwsychpkpdjihfcjttdbfgsjlfeqjgdkzajoehduwdrvwbyyhnyklwvaqevvongspjlezgqiwtwhdcplqxhfhwhojulhheyofohvexcpdwmczvfyvoqvrqaplgdwvlodgqyxowmlsjioddolqejoqokohffezgxoilypeumpyjldzwclsvdtujsfeeiznlccbxsjdwfdhxoheofdkqsynbwguvjidjyptgtmyvsjsbnoxzzupvejsdhmnjuasnwgmdzxvfynmnsdoshvrlixjdcxpmzxquuaeiqsbgaiqogxslcyubkfxbwhxptvmenlpdnbluieelkvyhlmsbfvhnsmmyctoEND'
   -- 3K
   local payload = 'oxmatxpzvdfyidvzstqzqiighnssurnuxwfuewbkcqzaxcpxuakjfcwnqnepnwpyuogphurujwkyaxiqktovhyisrogkjvxzmkzqancwhasttyembdvkawoiuehlzpyxkahtjvknrmkiuykusoksvfvzkrkweiujayjvbogbmtgbirwloskrwcsqckmldwmakicxwisoujhyfuigqpjcnzdzoxeqdvjtbmxyafsqulknlvzwwzzgvejauqsiqitdnbqrjmpyxrlfnsblyyrhsowxltcjvtlzaopbbrecbmybktnbcwzvakcycwtlebbwfrebgkrelztsbznvtoswyydouiwxkrrtepotbiyyvixtcqtimdvvvkziwvrifdjolzpnlfctcbchwkvflrluyzyoeticjqqpatgcromyfymvgjhaqwpcuclanuvnlzmqjklynmvfhwftpcqqaotlgtpvaflxrzqhqjcmqwpidufovtdthzyxahrdffhhfjdbqeebbqmtavrbjewlklqfhiisgjxiqzredgyrsvcvzeosscmomchfyagezwydughyfybfgehuqvjjtsamprkujurovshnjtauuieakkpkzqjvoupujxtxeuhriqtazbxpfxpcskjnhnnkwwljgyugokscvrvhmliqihvjjsggbmqmdgimufvyudjjqvvviugcjctfqwpatkfbwfjhlbsntfjrwewxroeffhbkhfuvbtzndziudfnsjufipwnglwwnxmtvuroluhefnvlheeodbnavshswjpbtckcafzasllpaposhulwzrlhwqdxlarkbmrysjzzzhnqgjskgylriofkofaxdikyphyzahwpbswthrckjzsthrbsvfhjqrwigdmrzfuwitlkxjguegbwcjeptmcnnjtfjsorswvfgvlxzkhuyhddvytrmdmrtqojefeprnkuuvqxsuhjyesoieysqjkzzbrlnwyvqcgxrprieyseddserzzejeubrxonsqklsmdfqkvehfkzhgdzvxfimhxsriwcprutyjhwfatnpwlwwjuntzjdufhzauidtmyopiuxqvjumjszicwyxpqvqvzzmcyydiytyrtdpmupokftompxrthrvxqnolmyadiyhahnardpwkydkbwdvdregmrirplstcxvvccboanikzuhzbhxmbribjaarkgerigomehxfydulzqohckifclddtcnexedlhjqyboicmrocksrfekcsvwkxbqdaklocoktjvmknsazrjfhyamcukdhiiujrjnlknyotkpvupdqernuwtcpbwxmxssgfnpxxwtzeqnhlykqimkodzxlgfytqkvvsfriiozgmlztsbzgjnqhfuuyewjeoqmbpprsvcwhhirdmhinfnhzcttkdclqafvjawvijkrjwepdcwsbehkazswkyblzrrhohoonvuojklxroocfrzagmawaqmejipnulbayldabapqiijjmwzlphwkrysmawkroheaheotsiuqqohircadjpaechiuqrwbtyaphvbcbangvspuddnkioombebfypdzusysgfhkbktwrtbvkjljkrqkbkrccwvhimjvryfcsasbtkatcffezzdcbvedjwdcqpbpufxudtdhkefkzktjwajwkcarihazzdhnujlylehqrsewvnlphqidcrmihxemvjuvnrexoounlimrclnpzcyjjucdzjdmicrusdxkskzcnmdflcjnbrfwxkebvsylrdfyzpbsvcsryrpkogfuougljfelzjqzfulxprgenxgxxmatqutlofspsquzuheynhuyiatunshyngsnyylpxjtldbydyqptppxhopekmlvgwuaymgljodshsjrztugtyavcrsbjsdxxcddofwfslocerziifstvnrowbiugtormasgmtamhkfwsposkzbjawltyyutrzqgdbuaychuunukydgdiijtzhtydqgvmuyeqfgtgpxqrhcbtnpmxzdtkyemimkbyskdclofsxasjtpmyrxbrrmppfndcnmtymzbzbgrvffxkhowvqanvrqbxzxapeqfakhjfivxjzdwobmibpxdethybrzuteeuxdvtrgdivhzeyqncuyihfgvlbwnpuqfsiculaphwglbvrhlubyqasidpyezdcsxqoeoafflzxwulbqiwromuihiyackmmdfvufympjulgyatgwyskxhhbqmfbekdfqbxxoibrmqhrbznzqbnofgggajepafqdtngwktthepfagcotottpxlciknxbkiofwzcbsspdeqgddjumteduaxycookrdbkbrivjshvwbfyrnufpywhpzpqqogmbynsopqgweteucbnjtsmppdwnftkknpesrenbzxozvjzaatewvkwmmiqdedaggowrjpdqqjwwdtzdfbzaualbvxwrvoszxnawjpbxyyutwmnptmsmoathrrficmqtnaiwynogrktzqkselhnezvwgoumhmhtggplecizpfbtdesygkvdkjvykohnibifgpwwqxdjebgrdzuzabgwvkgpgwondczcoqdprdkesmrfndgqgtfuskxuybqpdevlkcfmqwummaekajtoorpueqnlqwnkryloroxojhbunlgoluimmeekewapcjpcafgvvxaspahmaacspfbeaxqvmygixfqsyybcrpgpjtrnqgtznbwwmhghipfazvmwgqxytyrfgerwxyjsizzdbkyidoktgvxnzusibxkdpmbklimgndsptzqkcmtlwvccxpkjibtzbziqqrrknwbdhnuyxjxartrrfouveybrtcspskgopnzsdjcahqvwqctbdonkkklkzvejbcefturvlsocofdrvduuvlmpgaekhggliladbogkloambkcctkajhegeohrsmczwxcnkahhgmwfpqxwcqouawrlvdehEND'
   local header = {
       -- ["Date"] = "Mon, 13 Feb 2023 08:01:47 GMT",
       -- ["Server"] = "Apache",
       -- ["Strict-Transport-Security"] = "max-age=31536000",
       -- ["Last-Modified"] = "Wed, 13 Jul 2022 16:40:17 GMT",
       -- ["Accept-Ranges"] = "bytes",
       -- ["Vary"] = "Accept-Encoding",
       -- ["Content-Encoding"] = "gzip",
       -- ["Cache-Control"] = "max-age=31536000",
       -- ["Expires"] = "Tue, 13 Feb 2024 08:01:47 GMT",
       -- ["X-Frame-Options"] = "SAMEORIGIN",
       -- ["X-XSS-Protection"] = "1; mode=block",
       -- ["X-Content-Type-Options"] = "nosniff",
       -- ["Content-Length"] = "14893",
       -- ["Keep-Alive"] = "timeout=15, max=98",
       -- ["Connection"] = "Keep-Alive",
       ["Content-Type"] = "text/plain"
   }
   r[1] = wrk.format("POST", "/file_name", header, payload)
   r[2] = wrk.format("POST", "/file_content", header, payload)
end

request = function()
    if counter % 4 == 0 then
        -- path = "/file_name"
        req = r[1]
    else
        -- path = "/file_content"
        req = r[2]
    end
   counter = counter + 1
   return req
end
